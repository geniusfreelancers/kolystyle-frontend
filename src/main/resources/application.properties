server.port=8083
spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/kolystylefashionqas
#spring.datasource.url=jdbc:mysql://kolystylefashion.cpkxshhfn1yp.us-east-2.rds.amazonaws.com:3306/kolystylefashion
# Username and secret
spring.datasource.username=root
#spring.datasource.username=kolystylejainson
spring.datasource.password=98044Srp
#spring.datasource.password=98044Jainson

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#andyjainson@gmail.com 9804477031A
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=andyjainson@gmail.com
spring.mail.password=9804477031A
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.email=andyjainson@gmail.com
support.email=andyjainson@gmail.com
#Stripe App Key
STRIPE_PUBLIC_KEY=pk_test_ttLrBA9KK2jF5UELQI0yqAid
STRIPE_SECRET_KEY=sk_test_yQQwuIB1dscgzdG1po8xwkh1
